org.eclipse.xtend.core.idea.lang.psi.impl.XtendFileImpl:a.xtend(0,100)
  org.eclipse.xtext.psi.impl.PsiEObjectImpl(File_ELEMENT_TYPE)(0,100)
    org.eclipse.xtext.psi.impl.PsiNamedEObjectImpl(File_XtendTypesTypeParserRuleCall_2_0_ELEMENT_TYPE)(0,100)
      org.eclipse.xtext.psi.impl.PsiEObjectImpl(Type_XtendTypeDeclarationAction_0_ELEMENT_TYPE)(0,0)
        <empty list>
      org.eclipse.xtext.psi.impl.PsiEObjectImpl(Type_XtendClassAnnotationInfoAction_2_0_0_ELEMENT_TYPE)(0,0)
        <empty list>
      PsiElement(Type_ClassKeyword_2_0_2_ELEMENT_TYPE)('class')(0,5)
      org.eclipse.xtext.psi.impl.PsiEObjectImpl(Type_NameValidIDParserRuleCall_2_0_3_0_ELEMENT_TYPE)(5,10)
        PsiElement('?')(' ')(5,6)
        PsiElement('::')('Foo')(6,9)
        PsiElement('?')(' ')(9,10)
      PsiErrorElement:no viable alternative at input ' '(10,11)
        PsiElement(Type_LeftCurlyBracketKeyword_2_0_7_ELEMENT_TYPE)('{')(10,11)
      PsiElement('?')(' ')(11,12)
      PsiElement(')')('def')(12,15)
      PsiElement('?')(' ')(15,16)
      PsiElement('::')('foo')(16,19)
      PsiElement(RULE_IDENTIFIER_PART)('(')(19,20)
      PsiElement(RULE_HEX_DIGIT)(')')(20,21)
      PsiElement('?')(' ')(21,22)
      PsiElement('if')('''' foo «')(22,31)
      PsiElement('final')('IF')(31,33)
      PsiElement('?')(' ')(33,34)
      PsiElement('+')('true')(34,38)
      PsiElement('else')('» wurst «')(38,47)
      PsiElement('final')('IF')(47,49)
      PsiElement('?')(' ')(49,50)
      PsiElement('?:')('false')(50,55)
      PsiElement('else')('» brot «')(55,63)
      PsiElement('strictfp')('ELSE')(63,67)
      PsiElement('else')('» machine «')(67,78)
      PsiElement('native')('ENDIF')(78,83)
      PsiElement('else')('» bar «')(83,90)
      PsiElement('native')('ENDIF')(90,95)
      PsiElement('for')('»'''')(95,99)
      PsiElement(RULE_INT)('}')(99,100)
  PsiErrorElement:mismatched input ' ' expecting 'volatile'(100,100)
    <empty list>