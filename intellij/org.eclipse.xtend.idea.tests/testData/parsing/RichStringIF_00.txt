org.eclipse.xtend.core.idea.lang.psi.impl.XtendFileImpl:a.xtend(0,99)
  org.eclipse.xtext.psi.impl.PsiEObjectImpl(File_ELEMENT_TYPE)(0,99)
    org.eclipse.xtext.psi.impl.PsiNamedEObjectImpl(File_XtendTypesTypeParserRuleCall_2_0_ELEMENT_TYPE)(0,99)
      org.eclipse.xtext.psi.impl.PsiEObjectImpl(Type_XtendTypeDeclarationAction_0_ELEMENT_TYPE)(0,0)
        <empty list>
      org.eclipse.xtext.psi.impl.PsiEObjectImpl(Type_XtendClassAnnotationInfoAction_2_0_0_ELEMENT_TYPE)(0,0)
        <empty list>
      PsiElement(Type_ClassKeyword_2_0_2_ELEMENT_TYPE)('class')(0,5)
      org.eclipse.xtext.psi.impl.PsiEObjectImpl(Type_NameValidIDParserRuleCall_2_0_3_0_ELEMENT_TYPE)(5,10)
        PsiElement('?')(' ')(5,6)
        PsiElement('::')('Foo')(6,9)
        PsiElement('?')(' ')(9,10)
      PsiErrorElement:no viable alternative at input ' '(10,11)
        PsiElement(Type_LeftCurlyBracketKeyword_2_0_7_ELEMENT_TYPE)('{')(10,11)
      PsiElement('?')(' ')(11,12)
      PsiElement(')')('def')(12,15)
      PsiElement('?')(' ')(15,16)
      PsiElement('::')('foo')(16,19)
      PsiElement(RULE_IDENTIFIER_PART)('(')(19,20)
      PsiElement(RULE_HEX_DIGIT)(')')(20,21)
      PsiElement('?')(' ')(21,22)
      PsiElement('if')('''' foo «')(22,31)
      PsiElement('final')('IF')(31,33)
      PsiElement('?')(' ')(33,34)
      PsiElement('+')('true')(34,38)
      PsiElement('else')('» wurst «')(38,47)
      PsiElement('volatile')('ELSEIF')(47,53)
      PsiElement('?')(' ')(53,54)
      PsiElement('-')('null')(54,58)
      PsiElement('...')('==')(58,60)
      PsiElement('super')('3')(60,61)
      PsiElement('else')('» brot «')(61,69)
      PsiElement('strictfp')('ELSE')(69,73)
      PsiElement('else')('» machine «')(73,84)
      PsiElement('native')('ENDIF')(84,89)
      PsiElement('for')('» bar '''')(89,98)
      PsiElement(RULE_INT)('}')(98,99)
  PsiErrorElement:mismatched input ' ' expecting 'volatile'(99,99)
    <empty list>